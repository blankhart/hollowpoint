// Generated by hollowpoint version 0.1.0
import './foreign.dart' as $foreign;
export './foreign.dart';
import 'package:pkg/control/semigroupoid/index.dart' as Control_Semigroupoid;
import 'package:pkg/data/function/index.dart' as Data_Function;
import 'package:pkg/data/unit/index.dart' as Data_Unit;
class Functor {
    final dynamic map;
    const Functor(this.map);
    static dynamic get create => (map) {
        return Functor(map);
    };
}
map(dict) {
    return dict['map'];
}
mapFlipped(dictFunctor) {
    return (fa) {
        return (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
}
$$void(dictFunctor) {
    return map(dictFunctor)(Data_Function.$$const(Data_Unit.unit));
}
voidLeft(dictFunctor) {
    return (f) {
        return (x) {
            return map(dictFunctor)(Data_Function.$$const(x))(f);
        };
    };
}
voidRight(dictFunctor) {
    return (x) {
        return map(dictFunctor)(Data_Function.$$const(x));
    };
}
final functorFn = Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
final functorArray = Functor($foreign.arrayMap);
flap(dictFunctor) {
    return (ff) {
        return (x) {
            return map(dictFunctor)((f) {
                return f(x);
            })(ff);
        };
    };
}
