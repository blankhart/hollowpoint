// Generated by hollowpoint version 0.1.0
import './foreign.dart' as $foreign;
export './foreign.dart';
class SProxy {
    const SProxy();
}
class IsSymbol {
    final dynamic reflectSymbol;
    const IsSymbol(this.reflectSymbol);
    static dynamic get create => (reflectSymbol) {
        return IsSymbol(reflectSymbol);
    };
}
reifySymbol(s) {
    return (f) {
        return (() {
            final coerce = $foreign.unsafeCoerce;
            return coerce((dictIsSymbol) {
                return f(dictIsSymbol);
            })({
                'reflectSymbol': (v) {
                    return s;
                }
            })(SProxy());
        })();
    };
}
reflectSymbol(dict) {
    return dict['reflectSymbol'];
}
