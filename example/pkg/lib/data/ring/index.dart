// Generated by hollowpoint version 0.1.0
import './foreign.dart' as $foreign;
export './foreign.dart';
import 'package:pkg/data/semiring/index.dart' as Data_Semiring;
import 'package:pkg/data/unit/index.dart' as Data_Unit;
class Ring {
    final dynamic Semiring0;
    final dynamic sub;
    const Ring(this.Semiring0, this.sub);
    static dynamic get create => (Semiring0) {
        return (sub) {
            return Ring(Semiring0, sub);
        };
    };
}
sub(dict) {
    return dict['sub'];
}
final ringUnit = Ring(() {
    return Data_Semiring.semiringUnit;
}, (v) {
    return (v1) {
        return Data_Unit.unit;
    };
});
final ringNumber = Ring(() {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
final ringInt = Ring(() {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
ringFn(dictRing) {
    return Ring(() {
        return Data_Semiring.semiringFn(dictRing['Semiring0'](null));
    }, (f) {
        return (g) {
            return (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
}
negate(dictRing) {
    return (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing['Semiring0'](null)))(a);
    };
}
