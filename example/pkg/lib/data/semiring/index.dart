// Generated by hollowpoint version 0.1.0
import './foreign.dart' as $foreign;
export './foreign.dart';
import 'package:pkg/data/symbol/index.dart' as Data_Symbol;
import 'package:pkg/data/unit/index.dart' as Data_Unit;
import 'package:pkg/record/unsafe/index.dart' as Record_Unsafe;
import 'package:pkg/type/data/row/index.dart' as Type_Data_Row;
import 'package:pkg/type/data/row_list/index.dart' as Type_Data_RowList;
class SemiringRecord {
    final dynamic addRecord;
    final dynamic mulRecord;
    final dynamic oneRecord;
    final dynamic zeroRecord;
    const SemiringRecord(this.addRecord, this.mulRecord, this.oneRecord, this.zeroRecord);
    static dynamic get create => (addRecord) {
        return (mulRecord) {
            return (oneRecord) {
                return (zeroRecord) {
                    return SemiringRecord(addRecord, mulRecord, oneRecord, zeroRecord);
                };
            };
        };
    };
}
class Semiring {
    final dynamic add;
    final dynamic mul;
    final dynamic one;
    final dynamic zero;
    const Semiring(this.add, this.mul, this.one, this.zero);
    static dynamic get create => (add) {
        return (mul) {
            return (one) {
                return (zero) {
                    return Semiring(add, mul, one, zero);
                };
            };
        };
    };
}
zeroRecord(dict) {
    return dict['zeroRecord'];
}
zero(dict) {
    return dict['zero'];
}
final semiringUnit = Semiring((v) {
    return (v1) {
        return Data_Unit.unit;
    };
}, (v) {
    return (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
final semiringRecordNil = SemiringRecord((v) {
    return (v1) {
        return (v2) {
            return {};
        };
    };
}, (v) {
    return (v1) {
        return (v2) {
            return {};
        };
    };
}, (v) {
    return (v1) {
        return {};
    };
}, (v) {
    return (v1) {
        return {};
    };
});
final semiringNumber = Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
final semiringInt = Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
oneRecord(dict) {
    return dict['oneRecord'];
}
one(dict) {
    return dict['one'];
}
mulRecord(dict) {
    return dict['mulRecord'];
}
mul(dict) {
    return dict['mul'];
}
addRecord(dict) {
    return dict['addRecord'];
}
semiringRecord(dictRowToList) {
    return (dictSemiringRecord) {
        return Semiring(addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy()), mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy()), oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy())(Type_Data_Row.RProxy()), zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy())(Type_Data_Row.RProxy()));
    };
}
add(dict) {
    return dict['add'];
}
semiringFn(dictSemiring) {
    return Semiring((f) {
        return (g) {
            return (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, (f) {
        return (g) {
            return (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, (v) {
        return one(dictSemiring);
    }, (v) {
        return zero(dictSemiring);
    });
}
semiringRecordCons(dictIsSymbol) {
    return (dictCons) {
        return (dictSemiringRecord) {
            return (dictSemiring) {
                return SemiringRecord((v) {
                    return (ra) {
                        return (rb) {
                            return (() {
                                final tail = addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy())(ra)(rb);
                                final key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy());
                                final insert = Record_Unsafe.unsafeSet(key);
                                final get = Record_Unsafe.unsafeGet(key);
                                return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
                            })();
                        };
                    };
                }, (v) {
                    return (ra) {
                        return (rb) {
                            return (() {
                                final tail = mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy())(ra)(rb);
                                final key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy());
                                final insert = Record_Unsafe.unsafeSet(key);
                                final get = Record_Unsafe.unsafeGet(key);
                                return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
                            })();
                        };
                    };
                }, (v) {
                    return (v1) {
                        return (() {
                            final tail = oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy())(Type_Data_Row.RProxy());
                            final key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy());
                            final insert = Record_Unsafe.unsafeSet(key);
                            return insert(one(dictSemiring))(tail);
                        })();
                    };
                }, (v) {
                    return (v1) {
                        return (() {
                            final tail = zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy())(Type_Data_Row.RProxy());
                            final key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy());
                            final insert = Record_Unsafe.unsafeSet(key);
                            return insert(zero(dictSemiring))(tail);
                        })();
                    };
                });
            };
        };
    };
}
